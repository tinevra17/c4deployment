'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StringQuery = undefined;

var _graphql = require('graphql');

const StringQuery = exports.StringQuery = new _graphql.GraphQLScalarType({
  name: 'StringQuery',
  description: `Query constraint on string parameters
  Supported constraints:

  - key: "value"
  - key: {$regex: "value"}
  `,
  serialize: () => {
    throw "StringQuery serialize not implemented";
  },
  parseValue: () => {
    throw "StringQuery parseValue not implemented";
  },
  parseLiteral: ast => {
    if (ast.kind == _graphql.Kind.OBJECT) {
      const fields = ast.fields;
      return fields.reduce((memo, field) => {
        const operator = field.name.value;
        const value = field.value.value;
        memo['$' + operator] = value;
        return memo;
      }, {});
    } else if (ast.kind == _graphql.Kind.STRING) {
      return ast.value;
    } else {
      throw 'Invalid literal for StringQuery';
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ncmFwaHFsL3R5cGVzL1N0cmluZ1F1ZXJ5LmpzIl0sIm5hbWVzIjpbIlN0cmluZ1F1ZXJ5IiwiR3JhcGhRTFNjYWxhclR5cGUiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJzZXJpYWxpemUiLCJwYXJzZVZhbHVlIiwicGFyc2VMaXRlcmFsIiwiYXN0Iiwia2luZCIsIktpbmQiLCJPQkpFQ1QiLCJmaWVsZHMiLCJyZWR1Y2UiLCJtZW1vIiwiZmllbGQiLCJvcGVyYXRvciIsInZhbHVlIiwiU1RSSU5HIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBS08sTUFBTUEsb0NBQWMsSUFBSUMsMEJBQUosQ0FBc0I7QUFDL0NDLFFBQU0sYUFEeUM7QUFFL0NDLGVBQWM7Ozs7O0dBRmlDO0FBUS9DQyxhQUFXLE1BQU07QUFDZixVQUFNLHVDQUFOO0FBQ0QsR0FWOEM7QUFXL0NDLGNBQVksTUFBTTtBQUNoQixVQUFNLHdDQUFOO0FBQ0QsR0FiOEM7QUFjL0NDLGdCQUFlQyxHQUFELElBQVM7QUFDckIsUUFBSUEsSUFBSUMsSUFBSixJQUFZQyxjQUFLQyxNQUFyQixFQUE2QjtBQUMzQixZQUFNQyxTQUFTSixJQUFJSSxNQUFuQjtBQUNBLGFBQU9BLE9BQU9DLE1BQVAsQ0FBYyxDQUFDQyxJQUFELEVBQU9DLEtBQVAsS0FBaUI7QUFDcEMsY0FBTUMsV0FBV0QsTUFBTVosSUFBTixDQUFXYyxLQUE1QjtBQUNBLGNBQU1BLFFBQVFGLE1BQU1FLEtBQU4sQ0FBWUEsS0FBMUI7QUFDQUgsYUFBSyxNQUFNRSxRQUFYLElBQXVCQyxLQUF2QjtBQUNBLGVBQU9ILElBQVA7QUFDRCxPQUxNLEVBS0osRUFMSSxDQUFQO0FBTUQsS0FSRCxNQVFPLElBQUlOLElBQUlDLElBQUosSUFBWUMsY0FBS1EsTUFBckIsRUFBNkI7QUFDbEMsYUFBT1YsSUFBSVMsS0FBWDtBQUNELEtBRk0sTUFFQTtBQUNMLFlBQU0saUNBQU47QUFDRDtBQUNGO0FBNUI4QyxDQUF0QixDQUFwQiIsImZpbGUiOiJTdHJpbmdRdWVyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEdyYXBoUUxTY2FsYXJUeXBlLFxuICBLaW5kXG59IGZyb20gJ2dyYXBocWwnXG5cbmV4cG9ydCBjb25zdCBTdHJpbmdRdWVyeSA9IG5ldyBHcmFwaFFMU2NhbGFyVHlwZSh7XG4gIG5hbWU6ICdTdHJpbmdRdWVyeScsXG4gIGRlc2NyaXB0aW9uOiBgUXVlcnkgY29uc3RyYWludCBvbiBzdHJpbmcgcGFyYW1ldGVyc1xuICBTdXBwb3J0ZWQgY29uc3RyYWludHM6XG5cbiAgLSBrZXk6IFwidmFsdWVcIlxuICAtIGtleTogeyRyZWdleDogXCJ2YWx1ZVwifVxuICBgLFxuICBzZXJpYWxpemU6ICgpID0+IHtcbiAgICB0aHJvdyBcIlN0cmluZ1F1ZXJ5IHNlcmlhbGl6ZSBub3QgaW1wbGVtZW50ZWRcIlxuICB9LFxuICBwYXJzZVZhbHVlOiAoKSA9PiB7XG4gICAgdGhyb3cgXCJTdHJpbmdRdWVyeSBwYXJzZVZhbHVlIG5vdCBpbXBsZW1lbnRlZFwiXG4gIH0sXG4gIHBhcnNlTGl0ZXJhbDogKGFzdCkgPT4ge1xuICAgIGlmIChhc3Qua2luZCA9PSBLaW5kLk9CSkVDVCkge1xuICAgICAgY29uc3QgZmllbGRzID0gYXN0LmZpZWxkcztcbiAgICAgIHJldHVybiBmaWVsZHMucmVkdWNlKChtZW1vLCBmaWVsZCkgPT4ge1xuICAgICAgICBjb25zdCBvcGVyYXRvciA9IGZpZWxkLm5hbWUudmFsdWU7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZmllbGQudmFsdWUudmFsdWU7XG4gICAgICAgIG1lbW9bJyQnICsgb3BlcmF0b3JdID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgfSwge30pO1xuICAgIH0gZWxzZSBpZiAoYXN0LmtpbmQgPT0gS2luZC5TVFJJTkcpIHtcbiAgICAgIHJldHVybiBhc3QudmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93ICdJbnZhbGlkIGxpdGVyYWwgZm9yIFN0cmluZ1F1ZXJ5JztcbiAgICB9XG4gIH1cbn0pO1xuIl19